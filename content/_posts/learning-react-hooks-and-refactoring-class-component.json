{
  "title": "Learn React Hooks and refactoring Class Component",
  "date": "Jul 07, 2019",
  "author": "Farhan Tahir",
  "category": "react",
  "url": "learning-react-hooks-and-refactoring-class-component",
  "bodyContent": "With React 16.8, we get major imporements and enhancments in functional components. Before that, functional components were used for presentaional purposes and if you need state logic in your components or if you need show/update data from/to Redux etc. you needed to have Class based components.\n\n\nOne of major change in React 16.8 is ability of functions to be able to use states using hooks.\n\n\nHooks are simple functions which enables your component to use special React features, like states, lifecycle methods, connecting to stores etc.\n\nIn following example We are using `useState` hooks from react to use state withing functional component.\n\n```javascript\nimport React, { useState } from \"react\";\n\nconst AlertMsg = () => {\n  const [showMsg, setShowMsg] = useState(false);\n  \n  return (\n    <div>\n      <button onClick={() => setShowMsg(true)}>Show's a msg on click</button>\n      {showMsg && <p>I'm a message</p>}\n    </div>\n  );\n};\n\nexport defaul AlertMsg;\n```",
  "bodyHtml": "<p>With React 16.8, we get major imporements and enhancments in functional components. Before that, functional components were used for presentaional purposes and if you need state logic in your components or if you need show/update data from/to Redux etc. you needed to have Class based components.</p>\n<p>One of major change in React 16.8 is ability of functions to be able to use states using hooks.</p>\n<p>Hooks are simple functions which enables your component to use special React features, like states, lifecycle methods, connecting to stores etc.</p>\n<p>In following example We are using <code>useState</code> hooks from react to use state withing functional component.</p>\n<pre><code class=\"hljs\"><span class=\"hljs-keyword\">import</span> React, { useState } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">\"react\"</span>;\n\n<span class=\"hljs-keyword\">const</span> AlertMsg = <span class=\"hljs-function\"><span class=\"hljs-params\">()</span> =&gt;</span> {\n  <span class=\"hljs-keyword\">const</span> [showMsg, setShowMsg] = useState(<span class=\"hljs-literal\">false</span>);\n  \n  <span class=\"hljs-keyword\">return</span> (\n    <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{()</span> =&gt;</span> setShowMsg(true)}&gt;Show's a msg on click<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n      {showMsg &amp;&amp; <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span>I'm a message<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>}\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  );\n};\n\n<span class=\"hljs-keyword\">export</span> defaul AlertMsg;</code></pre>",
  "dir": "content/_posts",
  "base": "learning-react-hooks-and-refactoring-class-component.json",
  "ext": ".json",
  "sourceBase": "learning-react-hooks-and-refactoring-class-component.md",
  "sourceExt": ".md"
}